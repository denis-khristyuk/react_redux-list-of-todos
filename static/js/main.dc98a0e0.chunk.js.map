{"version":3,"sources":["store/todosReducer.ts","components/TodoItem/TodoItem.tsx","components/Loader/Loader.tsx","components/Notification/Notification.tsx","components/TodoList/TodoList.tsx","store/filterReducer.ts","components/TodoFilter/TodoFilter.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","app/store.ts","index.tsx"],"names":["initialState","todos","selectedTodo","TodoItem","todo","dispatch","useDispatch","className","id","cn","completed","title","type","onClick","payload","selectTodoAction","Loader","Notification","TodoList","useSelector","state","todosReducer","useState","filteredTodos","setFilteredTodos","useEffect","query","filterReducer","filterBy","filter","includes","length","map","TodoFilter","handleChangeQuery","value","setQueryAction","onSubmit","event","preventDefault","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","userId","href","email","name","App","rootStore","combineReducers","action","store","createStore","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc98a0e0.chunk.js","sourcesContent":["import {\n  SelectTodoAction,\n  SetTodosAction,\n  Todo, TodoAction, UnselectTodoAction,\n} from '../types/Todo';\n\nexport const setTodosAction = (todos: Todo[]): SetTodosAction => ({\n  type: 'SET_TODOS',\n  payload: todos,\n});\n\nexport const selectTodoAction = (todo: Todo): SelectTodoAction => ({\n  type: 'SELECT_TODO',\n  payload: todo,\n});\n\nexport const unselectTodoAction = (): UnselectTodoAction => ({\n  type: 'UNSELECT_TODO',\n});\n\nconst initialState = {\n  todos: [],\n  selectedTodo: null,\n};\n\nexport const todosReducer = (\n  state = initialState,\n  action: TodoAction,\n) => {\n  switch (action.type) {\n    case 'SET_TODOS':\n      return { ...state, todos: action.payload };\n\n    case 'SELECT_TODO':\n      return { ...state, selectedTodo: action.payload };\n\n    case 'UNSELECT_TODO':\n      return { ...state, selectedTodo: null };\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { Todo } from '../../types/Todo';\nimport { selectTodoAction } from '../../store/todosReducer';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const dispatch = useDispatch();\n\n  const handleSelectTodo = () => {\n    dispatch(selectTodoAction(todo));\n  };\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\"> </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn(\n          {\n            'has-text-danger': !todo.completed,\n            'has-text-success': todo.completed,\n          },\n        )}\n        >\n          {todo.title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={handleSelectTodo}\n        >\n          <span className=\"icon\">\n            <i className=\"far fa-eye\" />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\n\nexport const Notification: React.FC = () => {\n  return (\n    <p className=\"notification is-warning\">\n      There are no todos matching current filter criteria\n    </p>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { Loader } from '../Loader';\nimport { Notification } from '../Notification/Notification';\n\nexport const TodoList: React.FC = () => {\n  const todos = useSelector(\n    (state: any) => state.todosReducer.todos,\n  );\n\n  const [filteredTodos, setFilteredTodos] = useState(todos);\n\n  useEffect(() => {\n    setFilteredTodos(todos);\n  }, [todos]);\n\n  const query = useSelector(\n    (state: any) => state.filterReducer.query,\n  );\n\n  const filterBy = useSelector(\n    (state: any) => state.filterReducer.filter,\n  );\n\n  useEffect(() => {\n    if (filterBy === 'all') {\n      setFilteredTodos(\n        todos.filter((todo: Todo) => (todo.title.includes(query))),\n      );\n    }\n\n    if (filterBy === 'active') {\n      setFilteredTodos(\n        todos.filter(\n          (todo: Todo) => (todo.title.includes(query) && !todo.completed),\n        ),\n      );\n    }\n\n    if (filterBy === 'completed') {\n      setFilteredTodos(\n        todos.filter(\n          (todo: Todo) => (todo.title.includes(query) && todo.completed),\n        ),\n      );\n    }\n  }, [query, filterBy]);\n\n  return (\n    <>\n\n      {/* eslint-disable-next-line no-nested-ternary */}\n      {filteredTodos.length === 0 && todos.length > 0 ? (<Notification />)\n        : (\n          todos.length > 0\n            ? (\n              <table className=\"table is-narrow is-fullwidth\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n\n                    <th>\n                      <span className=\"icon\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    </th>\n\n                    <th>Title</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {filteredTodos.map((todo: Todo) => (\n                    <TodoItem todo={todo} key={todo.id} />\n                  ))}\n                </tbody>\n              </table>\n            ) : (\n              <Loader />\n            )\n        )}\n    </>\n  );\n};\n","import {\n  Filter,\n  FilterAction,\n  SetFilterAction,\n  SetQueryAction,\n} from '../types/filter';\n\nconst initialState = {\n  query: '',\n  filter: 'all',\n};\n\nexport const setQueryAction = (query: string): SetQueryAction => ({\n  type: 'SET_QUERY',\n  payload: query,\n});\n\nexport const setFilterAction = (filter: Filter): SetFilterAction => ({\n  type: 'SET_FILTER',\n  payload: filter,\n});\n\nexport const filterReducer = (\n  state = initialState,\n  action: FilterAction,\n) => {\n  switch (action.type) {\n    case 'SET_QUERY':\n      return { ...state, query: action.payload };\n\n    case 'SET_FILTER':\n      return { ...state, filter: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilterAction, setQueryAction } from '../../store/filterReducer';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const query = useSelector(\n    (state: any) => state.filterReducer.query,\n  );\n\n  const handleSelectFilter = (value: any) => {\n    dispatch(setFilterAction(value));\n  };\n\n  const handleChangeQuery = (value: any) => {\n    dispatch(setQueryAction(value));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={e => handleSelectFilter(e.target.value)}\n          >\n            <option value=\"all\">\n              All\n            </option>\n\n            <option value=\"active\">\n              Active\n            </option>\n\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={e => handleChangeQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => handleChangeQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { unselectTodoAction } from '../../store/todosReducer';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const todo = useSelector(\n    (state: any) => state.todosReducer.selectedTodo,\n  );\n\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.id).then(res => setUser(res));\n  }, []);\n\n  const handleUnselectTodo = () => {\n    dispatch(unselectTodoAction());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user\n        ? (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={handleUnselectTodo}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">{todo.title}</p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* For not completed */}\n                {todo.completed\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  ) : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )}\n\n                {/* For completed */}\n                {' by '}\n                <a href={`mailto:${user?.email}`}>{user?.name}</a>\n              </p>\n            </div>\n          </div>\n        )\n        : (\n          <Loader />\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { setTodosAction } from './store/todosReducer';\nimport { TodoModal } from './components/TodoModal';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const selectedTodo = useSelector(\n    (state: any) => state.todosReducer.selectedTodo,\n  );\n\n  useEffect(() => {\n    getTodos().then(res => dispatch(setTodosAction(res)));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && <TodoModal />}\n    </>\n  );\n};\n","import { combineReducers, createStore } from 'redux';\nimport { todosReducer } from '../store/todosReducer';\nimport { filterReducer } from '../store/filterReducer';\n\nconst rootStore = combineReducers({ todosReducer, filterReducer });\n\nexport const store = createStore(rootStore);\n","import ReactDOM from 'react-dom';\n// import { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\n// import { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport { store } from './app/store';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}